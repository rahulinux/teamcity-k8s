teamcityGlobalConfigurations:
  database: {}
  dataDirPath: "/storage/data"
  logDirPathPrefix: "/logs"
  additionalServerOpts: ""
  startupProperties:
    teamcity.startup.maintenance: false
  xmxValue: 1024m
  # database: {}
  # Example with provided values:
  #  database:
  #    url: "jdbc:postgresql://db:5432/buildserver"
  #    user: "root"
  #    password: "password"
  # Example with existing secret:
  # database:
  #  existingDatabaseSecret: "teamcity-db-secret"
  #  check secrets.yaml for structure and variable names

main:
  annotations: {}
  image: 
    name: "jetbrains/teamcity-server"
    tag: ""
  nodeId: main
  podAnnotations: {}
  resources:
    requests:
      cpu: 400m
      memory: 1500Mi
  responsibilities:
    - "MAIN_NODE"
    - "CAN_PROCESS_USER_DATA_MODIFICATION_REQUESTS"
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: role
                operator: In
                values:
                  - secondary
                  - main
          topologyKey: kubernetes.io/hostname
  nodeSelector: {}
  tolerations: []

secondary:
  replicas: 3
  responsibilities:
    - "CAN_CHECK_FOR_CHANGES"
    - "CAN_PROCESS_BUILD_TRIGGERS"
    - "CAN_PROCESS_USER_DATA_MODIFICATION_REQUESTS"
    - "CAN_PROCESS_BUILD_MESSAGES"
  annotations: {}
  image: 
    name: "jetbrains/teamcity-server"
    tag: ""
  podAnnotations: {}
  resources:
    requests:
      cpu: 400m
      memory: 1500Mi
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: role
                operator: In
                values:
                  - secondary
                  - main
          topologyKey: kubernetes.io/hostname
  nodeSelector: {}
  tolerations: []

persistence:
  enabled: true
  dataDir:
    storageClass: ""
    accessMode: "ReadWriteMany"
    annotations: {}
    size: 4Gi
  logDir:
    storageClass: ""
    accessMode: "ReadWriteOnce"
    annotations: {}
    size: 4Gi

imagePullSecrets: []
serviceAccount:
  create: true
  annotations: {}
  name: "teamcity"

podSecurityContext:
  fsGroup: 1000
  fsGroupChangePolicy: OnRootMismatch
  runAsGroup: 1000
  runAsUser: 1000

securityContext:
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 8111

postgresql:
  enabled: true
  auth:
    existingSecret: teamcity-db-secret

ingress:
  enabled: true
  hosts:
    - teamcity.example.com
  tls:
    - hosts:
        - teamcity.example.com
      secretName: teamcity-tls
  annotations: {}
  # Example:
  # annotations:
  #   kubernetes.io/ingress.class: nginx
  #   cert-manager.io/cluster-issuer: letsencrypt-prod
