apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "teamcity.fullname" . }}-main
  labels:
    {{- include "teamcity.labels.main" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.main.annotations | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "teamcity.selectorLabelsMain" . | nindent 6 }}
  serviceName: {{ include "teamcity.name.serviceNameMain" . }}
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "teamcity.selectorLabelsMain" . | nindent 8 }}
      {{- with .Values.main.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.main.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.main.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.main.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: teamcity-main
          image: {{ .Values.main.image.name }}:{{ coalesce .Chart.AppVersion .Values.main.image.tag }}
          imagePullPolicy: "IfNotPresent"
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          ports:
            - containerPort: {{ .Values.service.port }}
              protocol: TCP
              name: http
          resources:
            {{- toYaml .Values.main.resources | nindent 12 }}
          env:
            - name: TEAMCITY_SERVER_URL
              value: {{ .Values.nginx.serverName | quote }}
            - name: TEAMCITY_SERVER_OPTS
              value: {{ include "teamcity.mainOpts" . }}
            {{- if and .Values.persistence.enabled .Values.teamcityGlobalConfigurations.dataDirPath}}
            - name: TEAMCITY_DATA_PATH
              value: {{.Values.teamcityGlobalConfigurations.dataDirPath}}
            - name: TEAMCITY_LOGS_PATH
              value: {{ .Values.teamcityGlobalConfigurations.logDirPathPrefix }} 
            {{- end }}
            - name: TEAMCITY_DB_URL
              valueFrom:
                secretKeyRef:
                  key: url
                  name: "{{ include "teamcity.name.databaseSecret" . }}"
            - name: TEAMCITY_DB_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: "{{ include "teamcity.name.databaseSecret" . }}"
            - name: TEAMCITY_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: "{{ include "teamcity.name.databaseSecret" . }}"
          volumeMounts:
            - name: shared-nfs-data
              mountPath: {{ .Values.teamcityGlobalConfigurations.dataDirPath }}
            - name: logs
              mountPath: {{ .Values.teamcityGlobalConfigurations.logDirPathPrefix }}
            - name: teamcity-server-xml
              mountPath: /opt/teamcity/conf/server.xml
              subPath: server.xml
          livenessProbe:
            httpGet:
              path: /healthCheck/healthy
              port: http
            periodSeconds: 10
            failureThreshold: 12
          readinessProbe:
            httpGet:
              path: /mnt/get/stateRevision 
              # path: /healthCheck/ready
              port: http
            periodSeconds: 10
            failureThreshold: 10
      volumes:
      - name: shared-nfs-data
        persistentVolumeClaim:
          claimName: {{ include "teamcity.fullname" . }}-shared-data 
      - name: teamcity-server-xml
        configMap:
          name: {{ include "teamcity.fullname" . }}-server-xml
  volumeClaimTemplates:
    - metadata:
        name: logs
      spec:
        accessModes: [ {{ .Values.persistence.logDir.accessMode }} ]
        storageClassName: {{ coalesce .Values.persistence.logDir.storageClass .Values.storageClass }}
        resources:
          requests:
            storage: {{ .Values.persistence.logDir.size }}
